{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\38598\\\\Documents\\\\React\\\\asbp-react-auth-app\\\\src\\\\store\\\\auth-context.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nlet loggoutTimer;\nconst AuthContext = /*#__PURE__*/React.createContext({\n  token: '',\n  isLoggedIn: false,\n  login: token => {},\n  logout: () => {}\n});\nconst calculateReminingTime = expirationTime => {\n  const currentTime = new Date().getTime();\n  const adjExpirationTime = new Date(expirationTime).getTime();\n  const remainingDuration = adjExpirationTime - currentTime;\n  return remainingDuration;\n};\nconst retrivedStoredToken = () => {\n  const storedToken = localStorage.getItem('token');\n};\nexport const AuthContextProvider = props => {\n  _s();\n  const initialToken = localStorage.getItem('token');\n  const [token, setToken] = useState(initialToken);\n  const userIsLoggedIn = !!token;\n  const logoutHandler = () => {\n    setToken(null);\n    localStorage.removeItem('token');\n    if (loggoutTimer) {\n      clearTimeout(loggoutTimer);\n    }\n  };\n  const loginHandler = (token, expirationTime) => {\n    setToken(token);\n    localStorage.setItem('token', token);\n    const remainingTime = calculateReminingTime(expirationTime);\n    loggoutTimer = setTimeout(loginHandler, remainingTime);\n  };\n  const contextValue = {\n    token: token,\n    isLoggedIn: userIsLoggedIn,\n    login: loginHandler,\n    logout: logoutHandler\n  };\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: contextValue,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n};\n_s(AuthContextProvider, \"s3jk56xWU5XKZXYqw5SfcwTuysU=\");\n_c = AuthContextProvider;\nexport default AuthContext;\nvar _c;\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"names":["React","useState","loggoutTimer","AuthContext","createContext","token","isLoggedIn","login","logout","calculateReminingTime","expirationTime","currentTime","Date","getTime","adjExpirationTime","remainingDuration","retrivedStoredToken","storedToken","localStorage","getItem","AuthContextProvider","props","initialToken","setToken","userIsLoggedIn","logoutHandler","removeItem","clearTimeout","loginHandler","setItem","remainingTime","setTimeout","contextValue","children"],"sources":["C:/Users/38598/Documents/React/asbp-react-auth-app/src/store/auth-context.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nlet loggoutTimer;\r\n\r\nconst AuthContext = React.createContext({\r\n  token: '',\r\n  isLoggedIn: false,\r\n  login: (token) => {},\r\n  logout: () => {},\r\n});\r\n\r\nconst calculateReminingTime =(expirationTime)=>{\r\n  const currentTime = new Date().getTime();\r\n  const adjExpirationTime = new Date(expirationTime).getTime();\r\n  const remainingDuration = adjExpirationTime - currentTime;\r\n  return remainingDuration;\r\n\r\n}\r\nconst retrivedStoredToken=()=>{\r\n  const storedToken = localStorage.getItem('token');\r\n}\r\n\r\nexport const AuthContextProvider = (props) => {\r\n  const initialToken = localStorage.getItem('token');\r\n  const [token, setToken] = useState(initialToken);\r\n\r\n  const userIsLoggedIn = !!token;\r\n\r\n  const logoutHandler = () => {\r\n    setToken(null);\r\n    localStorage.removeItem('token');\r\n    if (loggoutTimer){\r\n      clearTimeout(loggoutTimer);\r\n    }\r\n\r\n  };\r\n\r\n  const loginHandler = (token, expirationTime) => {\r\n\r\n    setToken(token);\r\n    localStorage.setItem('token', token);\r\n    const remainingTime = calculateReminingTime(expirationTime);\r\n\r\n    loggoutTimer=setTimeout(loginHandler, remainingTime)\r\n  };\r\n\r\n \r\n\r\n  const contextValue = {\r\n    token: token,\r\n    isLoggedIn: userIsLoggedIn,\r\n    login: loginHandler,\r\n    logout: logoutHandler,\r\n  };\r\n\r\n  return (\r\n    <AuthContext.Provider value={contextValue}>\r\n      {props.children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n\r\nexport default AuthContext;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AAAC;AAExC,IAAIC,YAAY;AAEhB,MAAMC,WAAW,gBAAGH,KAAK,CAACI,aAAa,CAAC;EACtCC,KAAK,EAAE,EAAE;EACTC,UAAU,EAAE,KAAK;EACjBC,KAAK,EAAGF,KAAK,IAAK,CAAC,CAAC;EACpBG,MAAM,EAAE,MAAM,CAAC;AACjB,CAAC,CAAC;AAEF,MAAMC,qBAAqB,GAAGC,cAAc,IAAG;EAC7C,MAAMC,WAAW,GAAG,IAAIC,IAAI,EAAE,CAACC,OAAO,EAAE;EACxC,MAAMC,iBAAiB,GAAG,IAAIF,IAAI,CAACF,cAAc,CAAC,CAACG,OAAO,EAAE;EAC5D,MAAME,iBAAiB,GAAGD,iBAAiB,GAAGH,WAAW;EACzD,OAAOI,iBAAiB;AAE1B,CAAC;AACD,MAAMC,mBAAmB,GAAC,MAAI;EAC5B,MAAMC,WAAW,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;AACnD,CAAC;AAED,OAAO,MAAMC,mBAAmB,GAAIC,KAAK,IAAK;EAAA;EAC5C,MAAMC,YAAY,GAAGJ,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAClD,MAAM,CAACd,KAAK,EAAEkB,QAAQ,CAAC,GAAGtB,QAAQ,CAACqB,YAAY,CAAC;EAEhD,MAAME,cAAc,GAAG,CAAC,CAACnB,KAAK;EAE9B,MAAMoB,aAAa,GAAG,MAAM;IAC1BF,QAAQ,CAAC,IAAI,CAAC;IACdL,YAAY,CAACQ,UAAU,CAAC,OAAO,CAAC;IAChC,IAAIxB,YAAY,EAAC;MACfyB,YAAY,CAACzB,YAAY,CAAC;IAC5B;EAEF,CAAC;EAED,MAAM0B,YAAY,GAAG,CAACvB,KAAK,EAAEK,cAAc,KAAK;IAE9Ca,QAAQ,CAAClB,KAAK,CAAC;IACfa,YAAY,CAACW,OAAO,CAAC,OAAO,EAAExB,KAAK,CAAC;IACpC,MAAMyB,aAAa,GAAGrB,qBAAqB,CAACC,cAAc,CAAC;IAE3DR,YAAY,GAAC6B,UAAU,CAACH,YAAY,EAAEE,aAAa,CAAC;EACtD,CAAC;EAID,MAAME,YAAY,GAAG;IACnB3B,KAAK,EAAEA,KAAK;IACZC,UAAU,EAAEkB,cAAc;IAC1BjB,KAAK,EAAEqB,YAAY;IACnBpB,MAAM,EAAEiB;EACV,CAAC;EAED,oBACE,QAAC,WAAW,CAAC,QAAQ;IAAC,KAAK,EAAEO,YAAa;IAAA,UACvCX,KAAK,CAACY;EAAQ;IAAA;IAAA;IAAA;EAAA,QACM;AAE3B,CAAC;AAAC,GAtCWb,mBAAmB;AAAA,KAAnBA,mBAAmB;AAwChC,eAAejB,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module"}